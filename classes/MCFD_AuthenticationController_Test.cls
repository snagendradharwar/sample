/*********************************************************************************************************
Name            : MCFD_AuthenticationController_Test.cls  
Description     : This class is to test methods in MCFD_AuthenticationController  
Created By      : Deloitte
Created Date    : 22/May/2017
Modification Log:
-------------------------------------------------------------------------------------------------------------- 
Developer       Date        Description
--------------------------------------------------------------------------------------------------------------            
Abhishek      22/May/2017   
--------------------------------------------------------------------------------------------------------------              

***************************************************************************************************************/
@isTest(seeAllData=false)
public class MCFD_AuthenticationController_Test{


    // insert test data
    private Static Request__c requestTestData(){
        Request__c req = new Request__c();
        req.ICM_SR_number__c = '123456789';
        insert req;
        return req;
            
          
    }
        // insert test data for custom settings
    public static void createTest(){
        insert MCFD_TestDataHelper_Test.getMCFD_Portal_Settings('MCFD Community Login','MCFD Portal');      
        insert MCFD_TestDataHelper_Test.getMCFD_Portal_SSO_Redirection();
        Account mcfdPortalAccount = MCFD_TestDataHelper_Test.getAccount('MCFD Portal');
        insert mcfdPortalAccount;       
        
    }
    
    
    
        
    private static testMethod void test1(){
        Test.startTest();
        createTest();
        // setting current page reference
        PageReference pageRef = ApexPages.currentPage();
        Test.setCurrentPage(pageRef);
 
        // Add parameters to page URL
        Test.setMock(HttpCalloutMock.class, new MCFD_ExampleCalloutMock());
        // encodedbase64string 
        String encodedString = '';
        // Adding parameter  to current page
        pageRef.getParameters().put('SAMLResponse', encodedString );
        Test.setCurrentPage(pageRef);
        // calling class method
        MCFD_AuthenticationController cobj = new MCFD_AuthenticationController ();
        cobj.error= '';
        cobj.evaluateAssertion();
        
        MCFD_AuthenticationController.portalLandingPage();
        User usr = [select id,IsPortalEnabled from user limit 1];
        cobj.isUserFrozen(usr);
        cobj.redirectToSso(usr);
        Test.stopTest();
    }
        
        
    private static testMethod void test2(){
        Test.startTest();
        createTest();
        PageReference pageRef = ApexPages.currentPage();
        Test.setCurrentPage(pageRef);
 
        // Add parameters to page URL
        Test.setMock(HttpCalloutMock.class, new MCFD_ExampleCalloutMock());
       
        String encodedString = '';
        pageRef.getParameters().put('SAMLResponse', encodedString );
        Test.setCurrentPage(pageRef);
        MCFD_AuthenticationController cobj = new MCFD_AuthenticationController ();
        cobj.error= '';
        cobj.evaluateAssertion();
        
        MCFD_AuthenticationController.portalLandingPage();
        User usr = [select id,IsPortalEnabled from user limit 1];
        cobj.isUserFrozen(usr);
        cobj.redirectToSso(usr);
        Test.stopTest();
    }
        
    private static testMethod void test3(){
        
        createTest();
        PageReference pageRef = ApexPages.currentPage();
        Test.setCurrentPage(pageRef);
 
        // Add parameters to page URL
        Test.setMock(HttpCalloutMock.class, new MCFD_ExampleCalloutMock());
        
        String encodedString = '';
        pageRef.getParameters().put('SAMLResponse', encodedString );
        Test.setCurrentPage(pageRef);
        MCFD_AuthenticationController cobj = new MCFD_AuthenticationController ();
        cobj.error= '';
        cobj.evaluateAssertion();
        
        MCFD_AuthenticationController.portalLandingPage();
        User usr = [select id,IsPortalEnabled from user limit 1];
        cobj.isUserFrozen(usr);
        cobj.redirectToSso(usr);
        }
        
         private static testMethod void test4(){
        
        createTest();
        PageReference pageRef = ApexPages.currentPage();
        Test.setCurrentPage(pageRef);
        User us = MCFD_TestDataHelper_Test.getCommunityUser();
        
        // update us;
        // Add parameters to page URL
        Test.startTest();
        System.RunAs(us){
         
            String encodedString = '';
            pageRef.getParameters().put('SAMLResponse', encodedString );
            Test.setCurrentPage(pageRef);
            MCFD_AuthenticationController cobj = new MCFD_AuthenticationController ();
            cobj.error= '';
            cobj.evaluateAssertion();
        
        }
        Test.stopTest();
    }
        
    private static testMethod void test5(){
        
        createTest();
        PageReference pageRef = ApexPages.currentPage();
        Test.setCurrentPage(pageRef);
        User us = MCFD_TestDataHelper_Test.getCommunityUser();
        
       
        Test.startTest();
        System.RunAs(us){
            String encodedString = 'PHNvYXA6RW52ZWxvcGUgeG1sbnM6c29hcD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDMvMDUvc29hcC1lbnZlbG9wZVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIj4gPHNvYXA6Qm9keT4gPFBhc3NUaHJvdWdoUmVxUmVzcG9uc2UgeG1sbnM9XCJodHRwOi8vYW1zc2VydmljZXMuY29tL1wiPiA8UGFzc1Rocm91Z2hSZXFSZXN1bHQ+IDxQaWNrUmVzcG9uc2U+IDxGaWxlcz4gPEZpbGUgc2FnZmlsZT1cIldPUksuNzg2NDQ3MFwiPiA8SXRlbSBzYWdpdGVtPVwiV0VCU0VSVklDRS5UQUdTKldPUksuNzg2NDQ3MFwiPiA8YTE+UE9MSUNZLk5VTUJFUjwvYTE+IDxhMj5DTElFTlQuQ09ERTwvYTI+IDxhMz5FRkYuREFURTwvYTM+IDxhND5FWFAuREFURTwvYTQ+IDxhNT5DT1Y8L2E1PiA8YTY+SU5TPC9hNj4gPGE3PlRFUk08L2E3PiA8YTg+UE9MSUNZLlNUQVRVUzwvYTg+IDxhOT5CSUxMSU5HLk1FVEhPRDwvYTk+IDxhMTA+MzE8L2ExMD4gPGExMT4zMjwvYTExPiA8YTEyPjMzPC9hMTI+IDxhMTM+UE9MSUNZLlNUQVRVUzwvYTEzPiA8YTE0Pk5FVy5SRU48L2ExND4gPGExNT5DSEcuVElNRTwvYTE1PiA8L0l0ZW0+IDwvRmlsZT4gPEZpbGUgc2FnZmlsZT1cIldPUksuNzg2NDQ3MFwiPiA8SXRlbSBzYWdpdGVtPVwiNTc5NjE1XCI+IDxhMT5URVNUSU5HTkVXPC9hMT4gPGEyPlpJTUpPMTwvYTI+IDxhMz4wOC8wOC8xNjwvYTM+IDxhND4wOC8wOC8xNzwvYTQ+IDxhNT5BUkE8L2E1PiA8YTY+Q0VSPC9hNj4gPGE3PkE8L2E3PiA8YTk+QWdlbmN5IEJpbGw8L2E5PiA8YTE0Pk5FVzwvYTE0PiA8YTE1PjEyOjA2OjQ2PC9hMTU+IDwvSXRlbT4gPC9GaWxlPiA8L0ZpbGVzPiA8L1BpY2tSZXNwb25zZT48L1Bhc3NUaHJvdWdoUmVxUmVzdWx0PiA8L1Bhc3NUaHJvdWdoUmVxUmVzcG9uc2U+IDwvc29hcDpCb2R5PiA8L3NvYXA6RW52ZWxvcGU+Jw==';
           
            pageRef.getParameters().put('SAMLResponse', encodedString );
            Test.setCurrentPage(pageRef);
            MCFD_AuthenticationController cobj = new MCFD_AuthenticationController ();
            cobj.error= '';
            cobj.evaluateAssertion();
        
        }
        Test.stopTest();
    }
        
    private static testMethod void test6(){
        
        createTest();
        PageReference pageRef = ApexPages.currentPage();
        Test.setCurrentPage(pageRef);
        User us = MCFD_TestDataHelper_Test.getCommunityUser();
        
        
        Test.startTest();
        System.RunAs(us){
       
        String encodedString = '';
        
        pageRef.getParameters().put('SAMLResponse', encodedString );
            Test.setCurrentPage(pageRef);
            MCFD_AuthenticationController cobj = new MCFD_AuthenticationController ();
            cobj.error= '';
            cobj.evaluateAssertion();
            cobj.redirectToSso(us);
            cobj.redirectToSso(null);
        }
        Test.stopTest();
    }
        
    private static testMethod void test7(){
        
        createTest();
        PageReference pageRef = ApexPages.currentPage();
        Test.setCurrentPage(pageRef);
        User us = MCFD_TestDataHelper_Test.getCommunityUser();
        
        
        Test.startTest();
        System.RunAs(us){
        
            String encodedString = '';
            pageRef.getParameters().put('SAMLResponse', encodedString );
            Test.setCurrentPage(pageRef);
            MCFD_AuthenticationController cobj = new MCFD_AuthenticationController ();
            cobj.error= '';
            cobj.evaluateAssertion();
        
        }
        Test.stopTest();
    }
        
        
    private static testMethod void test8(){
        
        createTest();
        PageReference pageRef = ApexPages.currentPage();
        Test.setCurrentPage(pageRef);
        User us = MCFD_TestDataHelper_Test.getCommunityUser();
        
        // update us;
        // Add parameters to page URL
        Test.startTest();
        System.RunAs(us){
            String encodedString = '';
            pageRef.getParameters().put('SAMLResponse', encodedString );
            Test.setCurrentPage(pageRef);
            MCFD_AuthenticationController cobj = new MCFD_AuthenticationController ();
            cobj.error= '';
            cobj.evaluateAssertion();
        
        }
        Test.stopTest();
    }
        
    private static testMethod void test9(){
        
        createTest();
        PageReference pageRef = ApexPages.currentPage();
        Test.setCurrentPage(pageRef);
        //User us = getUser();
        User inActiveUser = MCFD_TestDataHelper_Test.getinActiveUser();
       
        Test.startTest();
        
        
        String encodedString = '';
        pageRef.getParameters().put('SAMLResponse', encodedString );
        Test.setCurrentPage(pageRef);
        MCFD_AuthenticationController cobj = new MCFD_AuthenticationController ();
        cobj.error= '';
        cobj.evaluateAssertion();
        
        
        Test.stopTest();
    }
        
    private static testMethod void test10(){
        
        createTest();
        PageReference pageRef = ApexPages.currentPage();
        Test.setCurrentPage(pageRef);
        
        User inActiveUser = MCFD_TestDataHelper_Test.getinActiveUser();
       
        Test.startTest();
        
       
        Test.setCurrentPage(pageRef);
        MCFD_AuthenticationController cobj = new MCFD_AuthenticationController ();
        cobj.error= '';
        cobj.evaluateAssertion();
        
        
        Test.stopTest();
    }
	/*
    private static testMethod void test11(){
        
        createTest();
       
        Test.startTest();
        
        MCFD_AuthenticationController.AuthenticationException testError = new MCFD_AuthenticationController.AuthenticationException(new MCFD_AuthenticationController.AuthenticationException(),'test');
 
        
        
        Test.stopTest();
    }*/
}